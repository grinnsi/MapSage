services:
  map-sage-dev:
    build:
      args:
        DOCKER_CONTAINER_WORKDIR: ${DOCKER_CONTAINER_WORKDIR}
        DEBIAN_VERSION: ${DEBIAN_VERSION}
      context: .
      dockerfile: Dockerfile
    container_name: ${DOCKER_CONTAINER_BASE_NAME}-dev
    image: ${APPLICATION_NAME}.python.dev:${DEBIAN_VERSION}
    command: ["python", "-u", "-m", "server"]
    user: root
    environment:
      LANG: ${LOCALE_LANG}
      LC_ALL: ${LOCALE_LANGUAGE}.${LOCALE_ENCODING}
      TZ: ${TIMEZONE}
      APP_ENV: dev
      # HOST_PORT_WEB_SERVER: ${HOST_PORT_WEB_SERVER}
      HOST_PORT_API_SERVER: ${HOST_PORT_API_SERVER}
      API_SERVER_ROOT_PATH: ${API_SERVER_ROOT_PATH}
    expose:
      - "${DOCKER_CONTAINER_PORT_SERVER}"
    hostname: ${DOCKER_CONTAINER_HOSTNAME_PYTHON}
    ports:
      - "${HOST_PORT_API_SERVER}:${DOCKER_CONTAINER_PORT_SERVER}"
    networks:
      my-network:
        ipv4_address: 192.0.0.2
    working_dir: ${DOCKER_CONTAINER_WORKDIR}
    volumes:
      - ./data:${DOCKER_CONTAINER_WORKDIR}/data
      - ./server:${DOCKER_CONTAINER_WORKDIR}/server
      - nuxt-generated-html:${DOCKER_CONTAINER_WORKDIR}/server/web/static

  map-sage-prod:
    build:
      args:
        DOCKER_CONTAINER_WORKDIR: ${DOCKER_CONTAINER_WORKDIR}
        DEBIAN_VERSION: ${DEBIAN_VERSION}
      context: .
      dockerfile: Dockerfile
    container_name: ${DOCKER_CONTAINER_BASE_NAME}-prod
    image: ${APPLICATION_NAME}.python.prod:${DEBIAN_VERSION}
    command: ["python", "-u", "-m", "server"]
    user: root
    environment:
      LANG: ${LOCALE_LANG}
      LC_ALL: ${LOCALE_LANGUAGE}.${LOCALE_ENCODING}
      TZ: ${TIMEZONE}
      APP_ENV: prod
      # HOST_PORT_WEB_SERVER: ${HOST_PORT_WEB_SERVER}
      HOST_PORT_API_SERVER: ${HOST_PORT_API_SERVER}
      API_SERVER_ROOT_PATH: ${API_SERVER_ROOT_PATH}
    expose:
      - "${DOCKER_CONTAINER_PORT_SERVER}"
    ports:
      - "${HOST_PORT_API_SERVER}:${DOCKER_CONTAINER_PORT_SERVER}"
    networks:
      my-network:
        ipv4_address: 192.0.0.2
    hostname: ${DOCKER_CONTAINER_HOSTNAME_PYTHON}
    working_dir: ${DOCKER_CONTAINER_WORKDIR}
    volumes:
      - ./data:${DOCKER_CONTAINER_WORKDIR}/data
  
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: ${DOCKER_CONTAINER_BASE_NAME}-nginx
    image: ${APPLICATION_NAME}.nginx
    environment:
      APP_ENV: ${APP_ENV}
      API_SERVER_ROOT_PATH: ${API_SERVER_ROOT_PATH}
      HOST_PORT_API_SERVER: ${HOST_PORT_API_SERVER}
    ports:
      - "80:80"
    networks:
      my-network:
        ipv4_address: 192.0.0.4

  postgis:
    image: postgis/postgis:latest
    container_name: ${DOCKER_CONTAINER_BASE_NAME}-postgis
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    networks:
      my-network:
        ipv4_address: 192.0.0.3

volumes:
  nuxt-generated-html:
    driver: local
    driver_opts:
      type: none
      device: "./server/web/static"
      o: bind
    name: ${APPLICATION_NAME}-nuxt-generated-html

networks:
  my-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: ${DOCKER_NETWORK_SUBNET}