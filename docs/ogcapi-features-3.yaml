openapi: 3.0.3
info:
  title: "Building Blocks specified in OGC API - Features - Part 3: Filtering"
  description: |-
    Common components used in the
    [OGC standard "OGC API - Features - Part 3: Filtering"](https://docs.ogc.org/is/19-079r2/19-079r2.html).

    OGC API - Features - Part 3: Filtering 1.0 is an OGC Standard.
    Copyright (c) 2024 Open Geospatial Consortium.
    To obtain additional rights of use, visit https://www.ogc.org/legal/ .

    This document is also available in the
    [OGC Schema Repository](https://schemas.opengis.net/ogcapi/features/part3/1.0/openapi/ogcapi-features-3.yaml).
  contact:
    name: Open Geospatial Consortium (OGC)
    url: https://www.ogc.org/contacts
    email: standards-team@ogc.org
  license:
    name: OGC License
    url: http://www.opengeospatial.org/legal/
  version: 1.0.0
  x-logo:
    url: https://www.ogc.org/pub/www/files/OGC_Logo_2D_Blue_x_0_0.png
servers:
- url: /
paths:
  /collections/{collectionId}/queryables:
    get:
      summary: Get the list of supported queryables for a collection
      description: "This operation returns the list of supported queryables of a collection. Queryables are \nthe properties that may be used to construct a filter expression on items in the collection.\nThe response is a JSON Schema of a object where each property is a queryable."
      operationId: getQueryables
      parameters:
      - name: collectionId
        in: path
        description: local identifier of a collection
        required: true
        schema:
          type: string
      responses:
        "200":
          description: The queryable properties of the collection.
          content:
            application/schema+json:
              schema:
                type: object
  /functions:
    get:
      summary: Get the list of supported functions
      description: This operation returns the list of custom functions supported in CQL2 expressions.
      operationId: getFunctions
      responses:
        "200":
          description: The list of custom functions supported in CQL2 expressions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/functions'
components:
  schemas:
    functions:
      required:
      - functions
      type: object
      properties:
        functions:
          type: array
          items:
            $ref: '#/components/schemas/functions_functions'
    functions_arguments:
      required:
      - type
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        type:
          type: array
          items:
            type: string
            enum:
            - string
            - number
            - integer
            - datetime
            - geometry
            - boolean
    functions_functions:
      required:
      - name
      - returns
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        metadataUrl:
          type: string
          format: uri-reference
        arguments:
          type: array
          items:
            $ref: '#/components/schemas/functions_arguments'
        returns:
          type: array
          items:
            type: string
            enum:
            - string
            - number
            - integer
            - datetime
            - geometry
            - boolean
  parameters:
    filter:
      name: filter
      in: query
      required: false
      style: form
      explode: false
      schema:
        type: string
    filter-lang:
      name: filter-lang
      in: query
      required: false
      style: form
      explode: true
      schema:
        type: string
        default: cql2-text
        enum:
        - cql2-text
        - cql2-json
    filter-crs:
      name: filter-crs
      in: query
      required: false
      style: form
      explode: false
      schema:
        type: string
        format: uri-reference
    collectionId:
      name: collectionId
      in: path
      description: local identifier of a collection
      required: true
      schema:
        type: string
